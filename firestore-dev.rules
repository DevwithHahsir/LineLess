// Firestore Security Rules for LineLess App - DEVELOPMENT VERSION
// This is a more permissive version for testing and development
// Copy these rules to your Firebase Console -> Firestore Database -> Rules

rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    
    // Helper functions
    function isAuthenticated() {
      return request.auth != null;
    }
    
    function isOwner(userId) {
      return isAuthenticated() && request.auth.uid == userId;
    }
    
    function isValidEmail(email) {
      return email.matches('.*@.*\\..*');
    }

    // User collections - permissive for development
    match /users/{userId} {
      allow read, write: if isAuthenticated();
    }

    match /userSignup/{userId} {
      allow read, write: if isAuthenticated();
    }

    match /providerSignup/{userId} {
      allow read, write: if isAuthenticated();
      
      // Business registrations subcollection under each provider
      match /businessRegistrations/{businessId} {
        allow read: if true; // Anyone can read for discovery
        allow write: if isAuthenticated(); // Any authenticated user can write
      }
    }

    // Main business registrations collection
    match /businessRegistrations/{businessId} {
      allow read: if true; // Anyone can read for discovery
      allow write: if isAuthenticated(); // Any authenticated user can write
    }

    // Appointments collection
    match /appointments/{appointmentId} {
      allow read, write: if isAuthenticated();
    }

    // Legacy collections
    match /BusinessProviderForm/{businessId} {
      allow read, write: if isAuthenticated();
    }

    // Allow all for development - REMOVE IN PRODUCTION
    match /{document=**} {
      allow read, write: if isAuthenticated();
    }
  }
}
